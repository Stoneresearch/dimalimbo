// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/aal/go/pkg/mod/github.com/hajimehoshi/ebiten/v2@v2.8.8/internal/glfw/util_unix.go:1:1
// SPDX-License-Identifier: Apache-2.0
// SPDX-FileCopyrightText: 2012 The glfw3-go Authors
// SPDX-FileCopyrightText: 2023 The Ebitengine Authors

//go:build darwin || freebsd || linux || netbsd || openbsd

package glfw; import _cgo_unsafe "unsafe"

// #include <stdlib.h>
// #define GLFW_INCLUDE_NONE
// #include "glfw3_unix.h"
import _ "unsafe"

import (
	"image"
	"image/draw"
)

func imageToGLFWImage(img image.Image) (glfwImg  /*line :19:49*/_Ctype_GLFWimage /*line :19:60*/, free func()) {
	b := img.Bounds()
	if b.Dx() == 0 || b.Dy() == 0 {
		return  /*line :22:10*/_Ctype_GLFWimage /*line :22:21*/{
			width:   /*line :23:12*/_Ctype_int /*line :23:17*/(b.Dx()),
			height:  /*line :24:12*/_Ctype_int /*line :24:17*/(b.Dy()),
		}, func() {}
	}

	m := image.NewNRGBA(image.Rect(0, 0, b.Dx(), b.Dy()))
	draw.Draw(m, m.Bounds(), img, b.Min, draw.Src)
	pixels := m.Pix

	cpixels := func() _cgo_unsafe.Pointer{ _cgo0 := /*line :32:22*/pixels; _cgoCheckPointer(_cgo0, nil); return /*line :32:29*/_Cfunc_CBytes(_cgo0); }()
	free = func() {
		func() { _cgo0 := /*line :34:10*/cpixels; _cgoCheckPointer(_cgo0, nil); /*line :34:18*/_Cfunc_free(_cgo0); }()
	}

	return  /*line :37:9*/_Ctype_GLFWimage /*line :37:20*/{
		width:   /*line :38:11*/_Ctype_int /*line :38:16*/(b.Dx()),
		height:  /*line :39:11*/_Ctype_int /*line :39:16*/(b.Dy()),
		pixels: (* /*line :40:13*/_Ctype_uchar /*line :40:20*/)(cpixels),
	}, free
}
